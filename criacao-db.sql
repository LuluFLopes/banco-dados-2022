-- DROP SCHEMA DESAFIO_MOV_CODAR;
CREATE SCHEMA DESAFIO_MOV_CODAR;
USE DESAFIO_MOV_CODAR;

CREATE TABLE CLIENTE (
    ID_CLIENTE INT PRIMARY KEY AUTO_INCREMENT,
    NOME_CLIENTE VARCHAR(50),
    CPF VARCHAR(14) UNIQUE,
    EMAIL VARCHAR(30),
    SENHA VARCHAR(50),
    DATA_NASCIMENTO DATE,
    PROFISSAO VARCHAR(40),
    GENERO VARCHAR(30),
    FK_ID_CONTA INT
);

CREATE TABLE ENDERECO (
    ID_ENDERECO INT PRIMARY KEY AUTO_INCREMENT,
    CEP VARCHAR(9),
    RUA VARCHAR(50),
    NUMERO INT,
    COMPLEMENTO VARCHAR(30),
    BAIRRO VARCHAR(30),
    CIDADE VARCHAR(30),
    ESTADO VARCHAR(30),
    PAIS VARCHAR(30),
    FK_ID_CLIENTE INT UNIQUE,
    FOREIGN KEY (FK_ID_CLIENTE) 
    REFERENCES Cliente (ID_CLIENTE) 
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE CONTA_CORRENTE (
    ID_CONTA INT PRIMARY KEY AUTO_INCREMENT,
    COD_BANCO INT,
    NOME_BANCO VARCHAR(30),
    NUM_CONTA INT UNIQUE,
    AGENCIA INT,
    APELIDO VARCHAR(50),
    SALDO DECIMAL(10,2),
    STATUS_CONTA VARCHAR(20) DEFAULT 'Sem bloqueios',
    FK_ID_CLIENTE INT,
    FOREIGN KEY (FK_ID_CLIENTE) 
    REFERENCES CLIENTE (ID_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

CREATE TABLE ID_CLIENTE_CONTA (
    FK_ID_CLIENTE INT,
    FK_ID_CONTA INT,
    FOREIGN KEY (FK_ID_CLIENTE) 
    REFERENCES CLIENTE (ID_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (FK_ID_CONTA) 
    REFERENCES CONTA_CORRENTE (ID_CONTA)
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

ALTER TABLE CLIENTE ADD CONSTRAINT
FOREIGN KEY (FK_ID_CONTA) REFERENCES CONTA_CORRENTE (ID_CONTA)
ON DELETE CASCADE
ON UPDATE CASCADE;

CREATE TABLE MOVIMENTO_FINANCEIRO (
    ID_MOVIMENTO INT PRIMARY KEY AUTO_INCREMENT,
    VALOR DECIMAL(10,2),
    DATA_MOVIMENTO TIMESTAMP,
    CATEGORIA VARCHAR(40),
    FK_ID_CLIENTE INT,
    FK_ID_CONTA INT,
    FOREIGN KEY (FK_ID_CLIENTE) 
    REFERENCES CLIENTE (ID_CLIENTE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
    FOREIGN KEY (FK_ID_CONTA) 
    REFERENCES CONTA_CORRENTE (ID_CONTA) 
    ON DELETE CASCADE
    ON UPDATE CASCADE
);

-- LINKAR A CRIAÇÃO DA CONTA COM O CLIENTE EM QUESTÃO.
DELIMITER $$
CREATE TRIGGER ASSOCIA_CONTA AFTER INSERT ON CONTA_CORRENTE FOR EACH ROW
BEGIN
UPDATE CLIENTE C 
INNER JOIN CONTA_CORRENTE CC
ON C.ID_CLIENTE = CC.FK_ID_CLIENTE
SET FK_ID_CONTA = CC.ID_CONTA 
WHERE C.ID_CLIENTE = CC.FK_ID_CLIENTE;
END $$

-- ATUALIZAR O SALDO CONFORME A MOVIMENTAÇÃO FINANCEIRA
DELIMITER $$
CREATE TRIGGER ATUALIZA_SALDO AFTER INSERT 
ON MOVIMENTO_FINANCEIRO FOR EACH ROW
BEGIN
UPDATE CONTA_CORRENTE CC 
INNER JOIN MOVIMENTO_FINANCEIRO MF
ON CC.FK_ID_CLIENTE = MF.FK_ID_CLIENTE
AND CC.ID_CONTA = MF.FK_ID_CONTA
SET CC.SALDO = CC.SALDO - NEW.VALOR
WHERE NEW.FK_ID_CLIENTE = CC.FK_ID_CLIENTE
AND NEW.FK_ID_CONTA = MF.FK_ID_CONTA;
END $$